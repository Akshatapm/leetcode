import java.util.*;

class Solution {
    public int[][] merge(int[][] intervals) {
        if (intervals.length == 0) return new int[0][];
        
        // Sort intervals by start time
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));

        List<int[]> merged = new ArrayList<>();
        int[] current = intervals[0];

        for (int i = 1; i < intervals.length; i++) {
            int[] next = intervals[i];

            if (next[0] <= current[1]) {  // Overlapping case
                current[1] = Math.max(current[1], next[1]);
            } else {  // Non-overlapping, push the previous and move on
                merged.add(current);
                current = next;
            }
        }
        
        merged.add(current);  // Add the last interval
        
        return merged.toArray(new int[merged.size()][]);
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        
        int[][] intervals = {{1,3}, {2,6}, {8,10}, {15,18}};
        
        int[][] result = solution.merge(intervals);
        
        // Print output
        System.out.print("Merged Intervals: ");
        for (int[] interval : result) {
            System.out.print(Arrays.toString(interval) + " ");
        }
    }
}
//it's bit tricky but if You Understood the logic then it's just like Easy peasy, lemon squeezy! 🍋
